@use "sass:map";

/*  width
======================== */
$contents_width: 1280px;
$padding: 20px;
$contents_plus_padding: calc($contents_width + ($padding * 2)); //1320px
$adjust: calc((1024px - 768px) / 2);
$boundary: 1024px;

//inner
@mixin inner($contentWidth: $contents_width) {
  width: min(100%, #{$contentWidth + ($padding * 2)});
  margin: 0 auto;
  padding-left: $padding;
  padding-right: $padding;
  @media all and (768px <= width < $contents_plus_padding) {
    width: min(100%, $contentWidth + $adjust - ($padding * 2));
    padding-left: $adjust;
    padding-right: $adjust;
  }
}

/*  PCでもハンバーガーがある時はtrueに変更
======================== */
$wide_hamburger: false;

$breakpoints: (
  'medium': '768px',
  'large': '1024px',
  'full': '1400px',
  'hamburger': '1024px',
) !default;

@mixin mq($breakpoint) {
  @media screen and (min-width : map.get($breakpoints, $breakpoint)) {
    @content;
  }
}
@mixin mqUnder($breakpoint) {
  @media not screen and (min-width: map.get($breakpoints, $breakpoint)) {
    @content;
  }
}
@mixin mqUpper($breakpoint) {
  @media screen and (min-width: map.get($breakpoints, $breakpoint)) {
    @content;
  }
}
@mixin mqMinMax($min, $max) {
  @media screen and (min-width: #{($min)}px) and ((max-width: #{($max)}px) ) {
    @content;
  }
}

/*  font
 */
@function font-size($font-size-px) {
  @return calc($font-size-px / var(--base) * 1rem);
}
@function fontClamp($min, $max, $min-view-port: 375, $max-view-port: 1600) {
  $valiable-part: calc(($max - $min) / ($max-view-port - $min-view-port));
  $constant: calc(($max - $max-view-port * $valiable-part) / 16);
  $min-rem: calc($min / 16 * 1rem);
  $max-rem: calc($max / 16 * 1rem);
  $variable-rem: calc($constant * 1rem);
  $variable-vw: calc(100 * $valiable-part * 1vw);

  @return clamp($min-rem, $variable-rem + $variable-vw, $max-rem);
}

@mixin font_base() {
  font-family: var(--ff-body);
  line-height: 1.6;
  letter-spacing: 0.05em;
  font-weight: 400;
  font-size: font-size(15);
  @include mq(medium) {
    font-size: font-size(16);
  }
}
@mixin font_title() {
  font-weight: 700;
}

@mixin font_en() {
  font-family: var(--ff-title);
}

/*  transition
======================== */
$func: cubic-bezier(0.59, 0.18, 0.13, 0.76);
@mixin trans-normal($prop: all) {
  transition: 0.3s $func;
  transition-property: $prop;
}

/*  CSS変数
======================== */
:root {
  --base: 16;
  --wide-hamburger: #{$wide_hamburger};
  --hamburger-breakpoint: map.get($breakpoints, 'hamburger');

  // header
  // ----------------------------------------
  --size-header-h: 80px;
  @include mq(large) {
    --size-header-h: 100px;
  }
  // scroll-padding-top: calc(var(--size-header-h) + 40px);

  // z-index
  // ----------------------------------------
  --z-go-top: 10;
  --z-header: 200;
  --z-drawer: 250;
  --z-header-logo: 300;
  --z-hamburger: 500;
  --z-skip-main: 999;
  --z-modal: 9999;
  --z-loading: calc(infinity);

  // color
  // ----------------------------------------
  --clr_default: #0e101c;
  --clr_text_gray: #616165;
  --clr_text_white: #f7f7f7;

  --clr_primary: #0077ef;

  --clr_bg: #efefef;
  --clr_bg_secondary: #f7f7f7;
  --clr_border: #707070;
  --clr_border_secondary: #dbdbdb;

  // 画面幅
  // ----------------------------------------
  --inner: calc(1080 / var(--base) * 1rem);
  --inner-lg: calc(1200 / var(--base) * 1rem);
  --inner-sm: calc(980 / var(--base) * 1rem);
  --inner-sp: 90%;

  // font
  // ----------------------------------------
  --ff-body: 'Noto Sans JP', 'ヒラギノ角ゴ ProN W3', Meiryo, sans-serif;
  --ff-title: 'Noto Sans JP', 'ヒラギノ角ゴ ProN W3', Meiryo, sans-serif;

  // transition
  // ----------------------------------------
  --transition: 0.3s ease-in-out;

  // svg
  // ----------------------------------------
  --outer-link-svg: url('data:image/svg+xml;charset=UTF-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 18.06 16.26"><g transform="translate(-8652 -13595.766)"><rect width="11.558" height="10.057" transform="translate(8657.502 13596.766)" fill="none" stroke="%23fff" stroke-miterlimit="10" stroke-width="2"/><g  transform="translate(8653 13601.119)"><path d="M316.958,281.805v2.1H305.4V274h2.4" transform="translate(-305.4 -274)" fill="none" stroke="%23fff" stroke-miterlimit="10" stroke-width="2"/></g></g></svg>');
}
